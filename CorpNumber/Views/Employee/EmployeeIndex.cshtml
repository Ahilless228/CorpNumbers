@model IEnumerable<CorpNumber.Models.Employee>
<style>
    .table-body-striped tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .table-body-striped tr:nth-child(odd) {
        background-color: #ffffff;
    }

    .table-body-striped tr:hover {
        background-color: #e9f7ff;
    }

    #employeeTable th, #employeeTable td {
        vertical-align: middle;
        padding: 0.4rem 0.6rem;
        font-size: 0.95rem;
     }

    .table-primary {
        background-color: #d0ebff !important;
    }
</style>

@{
    ViewData["Title"] = "Сотрудники ОсОО Алтынкен";
}

<div class="container mt-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>🧑‍🔧👷Сотрудники ОсОО "Алтынкен</h2>
        </div>
        <img src="~/images/altynken-logo.jpg" alt="Логотип" height="60" />
    </div>

    <!-- Action Buttons -->
    <div class="mb-3">
        <div class="btn-group" role="group">
            <button class="btn btn-outline-success">Прием на работу</button>
            <button class="btn btn-outline-danger">Увольнение</button>
            <button class="btn btn-outline-primary">Должности</button>
            <button class="btn btn-outline-primary">Отделы</button>
            <button class="btn btn-outline-warning text-dark">Перевод</button>
            <button class="btn btn-outline-info text-dark">Управления</button>
            <button class="btn btn-outline-secondary">Уволенные</button>
            <button class="btn btn-outline-dark">Переводы</button>
        </div>

    </div>

    <!-- Search & Controls -->
    <div class="row mb-2">
        <div class="col-md-4">
            <input type="text" id="employeeSearch" class="form-control" placeholder="Поиск сотрудника...">
        </div>
        <div class="col-md-2">
            <button class="btn btn-outline-secondary" id="resetSearch">Сброс фильтра</button>
        </div>
        <div class="col-md-6 text-end">
            <button class="btn btn-outline-primary" id="scrollStart">⏮️</button>
            <button class="btn btn-outline-primary" id="scrollEnd">⏭️</button>
        </div>
    </div>
    <!-- Employee Count -->
    <div class="mt-3">
        <strong>Количество сотрудников: </strong>
        <span id="employeeCount" class="badge bg-primary rounded-pill px-3 py-1">
            @Model.Count()
        </span>
    </div>

    <!-- Employees Table -->
    <div class="table-responsive border rounded shadow-sm" style="max-height: 400px; overflow-y: auto;">
        <table class="table table-sm table-striped table-hover table-bordered mb-0" id="employeeTable">
            <thead class="table-light sticky-top" style="z-index: 1;">
                <tr>
                    <th>Код</th>
                    <th>Фамилия</th>
                    <th>Имя</th>
                    <th>Отчество</th>
                    <th>姓名</th>
                    <th>Таб. №</th>
                    <th>Должность</th>
                    <th>Управление</th>
                    <th>Отдел</th>
                    <th>Норма</th>
                </tr>
            </thead>
            <tbody class="table-body-striped">
                @foreach (var emp in Model.OrderBy(e => e.Surname).ThenBy(e => e.Firstname).ThenBy(e => e.Midname))
                {
                    <tr data-id="@emp.CodeEmployee" class="employee-row">
                        <td>@emp.CodeEmployee</td>
                        <td>@emp.Surname</td>
                        <td>@emp.Firstname</td>
                        <td>@emp.Midname</td>
                        <td>@emp.NameCh</td>
                        <td>@emp.TabNum?.ToString("D5")</td>
                        <td>@(emp.PostNavigation?.Postt + " " + emp.PostNavigation?.PostCh)</td>
                        <td>@(emp.DepartmentNavigation?.DepartmentName + " " + emp.DepartmentNavigation?.DepartmentCh)</td>
                        <td>@(emp.SectionNavigation?.SectionName + " " + emp.SectionNavigation?.SectionCh)</td>
                        <td>@emp.CodeQuotaNavigation?.Quotaa</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <!--Информационное окошко-->
    <div class="mt-4 p-3 border rounded bg-light position-relative" id="detailsPane" style="min-height: 200px; margin-bottom: 80px;">
        <!-- Кнопка со смайликом в правом верхнем углу -->
        <button type="button" class="btn btn-sm btn-light border rounded-circle position-absolute"
                title="Подробнее о сотруднике"
                style="top: 10px; right: 10px; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center;"
                data-bs-toggle="modal" data-bs-target="#employeeInfoModal">
            👨‍💼
        </button>


        <div class="row">
            <!-- Фото -->
            <div class="col-md-3 d-flex align-items-center">
                <img src="~/images/default-profile.jpg" alt="Фото сотрудника" id="detailPhoto"
                     style="max-height: 200px; max-width: 100%; object-fit: cover; border: 1px solid #999;" />
            </div>

            <!-- Информация -->
            <div class="col-md-9">
                <div class="row mb-2">
                    <div class="col-md-3 fw-bold">ФИО:</div>
                    <div class="col-md-9" id="detailEmployee">—</div>
                </div>
                <div class="row mb-2">
                    <div class="col-md-3 fw-bold">姓名:</div>
                    <div class="col-md-9" id="detailNameCh">—</div>
                </div>
                <div class="row mb-2">
                    <div class="col-md-3 fw-bold">Таб. № / Дата приёма:</div>
                    <div class="col-md-9"><span id="detailTabnum">—</span> / <span id="detailInputDate">—</span></div>
                </div>
                <div class="row mb-2">
                    <div class="col-md-3 fw-bold">Должность:</div>
                    <div class="col-md-9" id="detailPost">—</div>
                </div>
                <div class="row mb-2">
                    <div class="col-md-3 fw-bold">Отдел:</div>
                    <div class="col-md-9" id="detailSection">—</div>
                </div>
                <div class="row mb-2">
                    <div class="col-md-3 fw-bold">Управление:</div>
                    <div class="col-md-9" id="detailDepartment">—</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Модальное окно редактирования данных о сотруднике -->
    <div class="modal fade" id="employeeInfoModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered" style="max-width: 85vw;">
            <div class="modal-content" style="max-height: 90vh; overflow-y: auto;">

                <!-- Header -->
                <div class="modal-header d-flex align-items-center">
                    <div class="me-3" style="font-size: 2.5rem; line-height: 1;">👷</div>
                    <h5 class="modal-title flex-grow-1">Изменить данные о сотруднике</h5>
                    <img src="/images/altynken-logo.jpg" alt="Лого" style="height: 40px;">
                </div>

                <!-- Body -->
                <div class="modal-body">
                    <div class="row">
                        <!-- Левая колонка с данными -->
                        <div class="col-md-8">
                            <div class="mb-2"><strong>Код:</strong> <span id="empCode">—</span></div>
                            <div class="mb-2"><strong>Фамилия:</strong> <input type="text" id="empSurname" class="form-control form-control-sm" /></div>
                            <div class="mb-2"><strong>Имя:</strong> <input type="text" id="empFirstname" class="form-control form-control-sm" /></div>
                            <div class="mb-2"><strong>Отчество:</strong> <input type="text" id="empMidname" class="form-control form-control-sm" /></div>
                            <div class="mb-2"><strong>姓名:</strong> <input type="text" id="empNameCh" class="form-control form-control-sm" /></div>

                            <div class="mb-2 row">
                                <div class="col-6"><strong>Таб. №:</strong> <input type="text" id="empTabNum" class="form-control form-control-sm" /></div>
                                <div class="col-6"><strong>Дата приёма:</strong> <input type="date" id="empInputDate" class="form-control form-control-sm" /></div>
                            </div>

                            <div class="mb-2"><strong>Должность:</strong> <select id="empPost" class="form-select form-select-sm"></select></div>
                            <div class="mb-2">
                                <strong>
                                    Совмещение:
                                    <select id="empPartTime" class="form-select form-select-sm">
                                        <option value="">—</option> <!-- для случаев, когда PartTime == null -->
                                    </select>
                                </strong>
                                    
                            </div>
                            <div class="mb-2"><strong>Управление:</strong> <select id="empDepartment" class="form-select form-select-sm"></select></div>
                            <div class="mb-2"><strong>Отдел:</strong> <select id="empSection" class="form-select form-select-sm"></select></div>
                            <div class="mb-2"><strong>Норма:</strong> <select id="empQuota" class="form-select form-select-sm"></select></div>
                            <div class="mb-2"><strong>Категория:</strong> <select id="empCategory" class="form-select form-select-sm"></select></div>

                        </div>

                        <!-- Правая колонка -->
                        <div class="col-md-4 d-flex flex-column align-items-center">
                            <img src="/images/default-profile.jpg" alt="Фото сотрудника" id="empPhoto"
                                 style="max-height: 200px; max-width: 100%; object-fit: cover; border: 1px solid #999;">
                            <form id="uploadPhotoForm" enctype="multipart/form-data">
                                <input type="file" id="empPhotoInput" accept=".jpg" style="display: none;" />
                                <button type="button" class="btn btn-sm btn-outline-primary mt-2" id="changePhotoBtn">Изменить фото</button>
                            </form>

                        </div>
                    </div>
                </div>

                <!-- Tab-панель -->
                <ul class="nav nav-tabs px-3" id="employeeTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="contract-tab" data-bs-toggle="tab" data-bs-target="#contract" type="button" role="tab">Труд. договор и вредность</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="passport-tab" data-bs-toggle="tab" data-bs-target="#passport" type="button" role="tab">Паспортные данные</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="address-tab" data-bs-toggle="tab" data-bs-target="#address" type="button" role="tab">Адрес</button>
                    </li>
                </ul>

                <!-- Содержимое вкладок -->
                <div class="tab-content px-3 pt-2" id="employeeTabContent">
                    <!-- Вкладка 1 -->
                    <div class="tab-pane fade show active" id="contract" role="tabpanel">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-2"><strong>Номер труд. договора:</strong> <input type="text" id="empContractNumber" class="form-control form-control-sm" /></div>
                                <div class="mb-2"><strong>Дата труд. договора:</strong> <input type="date" id="empContractDate" class="form-control form-control-sm" /></div>
                                <div class="mb-2 form-check">
                                    <input type="checkbox" id="empFired" class="form-check-input">
                                    <label class="form-check-label" for="empFired"><strong>Уволен</strong></label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-2">
                                    <strong>Доплата за вредность:</strong>
                                    <div class="input-group">
                                        <input type="number" id="empHazard" class="form-control form-control-sm" />
                                        <span class="input-group-text">%</span>
                                    </div>
                                </div>

                                <div class="mb-2"><strong>Документ на вредность:</strong> <select id="empHazardDoc" class="form-select form-select-sm"></select></div>
                                <div class="mb-2"><strong>Дата увольнения:</strong> <input type="date" id="empFiringDate" class="form-control form-control-sm" /></div>
                            </div>
                        </div>
                    </div>

                    <!-- Вкладка 2 -->
                    <div class="tab-pane fade" id="passport" role="tabpanel">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-2"><strong>Пол:</strong> <select id="empSex" class="form-select form-select-sm"></select></div>
                                <div class="mb-2"><strong>Дата рождения:</strong> <input type="date" id="empBirthday" class="form-control form-control-sm" /></div>
                                <div class="mb-2"><strong>Гражданство:</strong> <select id="empCitizenship" class="form-select form-select-sm"></select></div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-2"><strong>Паспортные данные:</strong> <input type="text" id="empPassport" class="form-control form-control-sm" /></div>
                                <div class="mb-2"><strong>Национальность:</strong> <select id="empNationality" class="form-select form-select-sm"></select></div>
                            </div>
                        </div>
                    </div>

                    <!-- Вкладка 3 -->
                    <div class="tab-pane fade" id="address" role="tabpanel">
                        <div class="row">
                            <div class="col-12">
                                <div class="mb-2"><strong>Адрес:</strong> <input type="text" id="empAddress" class="form-control form-control-sm" /></div>
                                <div class="mb-2"><strong>Район:</strong> <select id="empDistrict" class="form-select form-select-sm"></select></div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-success btn-sm">Сохранить</button>
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Отменить</button>
                </div>

            </div>
        </div>
    </div>




    
</div>



@section Scripts {
    <!--Фильтрация , счетчик-->
    <script>
        function selectEmployeeRow(row) {
            const id = row.getAttribute('data-id');

            fetch(`/Employee/GetEmployeeDetails?id=${id}`)
                .then(res => res.json())
                .then(data => {
                    document.getElementById("detailEmployee").textContent = data.fullname;
                    document.getElementById("detailNameCh").textContent = data.nameCh;
                    document.getElementById("detailTabnum").textContent = data.tabnum;
                    document.getElementById("detailInputDate").textContent = data.inputDate;
                    document.getElementById("detailPost").textContent = data.post;
                    document.getElementById("detailDepartment").textContent = data.department;
                    document.getElementById("detailSection").textContent = data.section;
                    document.getElementById("detailPhoto").src = data.photoPath;
                });

            // Подсветка выбранной строки
            document.querySelectorAll('.employee-row').forEach(r => r.classList.remove('table-primary'));
            row.classList.add('table-primary');
        }

        document.querySelectorAll('.employee-row').forEach(row => {
            row.addEventListener('click', function () {
                selectEmployeeRow(this);
            });
        });

        document.getElementById('employeeSearch').addEventListener('input', function () {
            const search = this.value.toLowerCase();
            const rows = document.querySelectorAll('#employeeTable tbody tr');
            let visibleCount = 0;

            rows.forEach(row => {
                const name = row.children[1].textContent.toLowerCase();
                const fname = row.children[2].textContent.toLowerCase();
                const mname = row.children[3].textContent.toLowerCase();
                const match = name.includes(search) || fname.includes(search) || mname.includes(search);
                row.style.display = match ? '' : 'none';
                if (match) visibleCount++;
            });

            document.getElementById('employeeCount').textContent = visibleCount;
        });

        document.getElementById('resetSearch').addEventListener('click', function () {
            document.getElementById('employeeSearch').value = '';
            const rows = document.querySelectorAll('#employeeTable tbody tr');
            rows.forEach(row => row.style.display = '');
            document.getElementById('employeeCount').textContent = rows.length;
        });

        document.getElementById('scrollStart').addEventListener('click', function () {
            const visibleRows = Array.from(document.querySelectorAll('#employeeTable tbody tr'))
                .filter(row => row.style.display !== 'none');

            if (visibleRows.length > 0) {
                const firstVisible = visibleRows[0];
                firstVisible.scrollIntoView({ behavior: 'smooth' });
                selectEmployeeRow(firstVisible);
            }
        });

        document.getElementById('scrollEnd').addEventListener('click', function () {
            const visibleRows = Array.from(document.querySelectorAll('#employeeTable tbody tr'))
                .filter(row => row.style.display !== 'none');

            if (visibleRows.length > 0) {
                const lastVisible = visibleRows[visibleRows.length - 1];
                lastVisible.scrollIntoView({ behavior: 'smooth' });
                selectEmployeeRow(lastVisible);
            }
        });
    </script>



    <!--загрузка данных из БД в мод окно-->
    <script>
        document.querySelector('[data-bs-target="#employeeInfoModal"]').addEventListener('click', () => {
            const selectedRow = document.querySelector('.employee-row.table-primary');
            if (!selectedRow) return;

            const id = selectedRow.getAttribute('data-id');

            fetch(`/Employee/GetEmployeeFullDetails?id=${id}`)
                .then(response => response.json())
                .then(data => {
                    // Установить значения input'ов
                    document.getElementById('empCode').textContent = data.codeEmployee;
                    document.getElementById('empSurname').value = data.surname;
                    document.getElementById('empFirstname').value = data.firstname;
                    document.getElementById('empMidname').value = data.midname;
                    document.getElementById('empNameCh').value = data.nameCh;
                    document.getElementById('empPartTime').value = data.partTime ?? '';
                    document.getElementById('empTabNum').value = data.tabNum;
                    document.getElementById('empInputDate').value = data.inputDate?.split('T')[0] || "";

                    document.getElementById('empContractNumber').value = data.contractNumber;
                    document.getElementById('empContractDate').value = data.contractDate?.split('T')[0] || "";
                    document.getElementById('empFired').checked = data.fired;
                    document.getElementById('empFiringDate').value = data.firingDate?.split('T')[0] || "";
                    document.getElementById('empHazard').value = data.hazard;
                    document.getElementById('empPassport').value = data.passport;
                    document.getElementById('empBirthday').value = data.birthday?.split('T')[0] || "";
                    document.getElementById('empAddress').value = data.address;
                    document.getElementById('empPhoto').src = data.photo;

                    // Функция для заполнения select'а
                    function fillSelect(selectId, list, selectedCode) {
                        const select = document.getElementById(selectId);
                        select.innerHTML = ""; // Очистка

                        list.forEach(item => {
                            const option = document.createElement("option");
                            option.value = item.code ?? ""; // null → пустая строка
                            option.textContent = item.title ?? "—";
                            if ((item.code ?? "") == (selectedCode ?? "")) option.selected = true;
                            select.appendChild(option);
                        });
                    }



                    fillSelect('empPost', data.posts, data.post);
                    fillSelect('empPartTime', data.partTimeList, data.partTime);
                    fillSelect('empDepartment', data.departments, data.department);
                    fillSelect('empSection', data.sections, data.section);
                    fillSelect('empQuota', data.quotas, data.quota);
                    fillSelect('empHazardDoc', data.hazardDocs, data.hazardDoc);
                    fillSelect('empSex', data.sexes, data.sex);
                    fillSelect('empCitizenship', data.citizenships, data.citizenship);
                    fillSelect('empNationality', data.nationalities, data.nationality);
                    fillSelect('empDistrict', data.districts, data.district);
                    fillSelect('empCategory', data.categories, data.codeCategory);


                });
        });
    </script>


    <!--Скрипт замены фото с защитой от несохранённых данных-->
    <script>
        document.getElementById("changePhotoBtn").addEventListener("click", function () {
            if (isFormChanged) {
                alert("Сначала сохраните изменения перед сменой фото.");
                return;
            }
            document.getElementById("empPhotoInput").click();
        });

        document.getElementById("empPhotoInput").addEventListener("change", function () {
            const file = this.files[0];
            if (!file || !file.name.endsWith('.jpg')) {
                alert("Пожалуйста, выберите файл формата .jpg");
                return;
            }

            const tabNum = document.getElementById("empTabNum").value;
            if (!tabNum) {
                alert("Табельный номер не найден");
                return;
            }

            const formData = new FormData();
            formData.append("photo", file);
            formData.append("tabNum", tabNum);

            fetch("/Employee/UploadPhoto", {
                method: "POST",
                body: formData
            })
            .then(res => {
                if (res.ok) return res.text();
                throw new Error("Ошибка загрузки");
            })
            .then(photoUrl => {
                document.getElementById("empPhoto").src = photoUrl + "?t=" + new Date().getTime(); // обновить без кэша
            })
            .catch(err => alert(err));
        });
    </script>




    <!--Подтверждение отмены изменений и сохранения — исправленный вариант-->
    <script>
        let isFormChanged = false;
        let cancelConfirmed = false;

        function resetFormChangedFlag() {
            isFormChanged = false;
            cancelConfirmed = false;
        }

        (() => {
            const modalEl = document.getElementById('employeeInfoModal');

            // Слушатели на все input/select — один раз при загрузке страницы
            document.querySelectorAll('#employeeInfoModal input, #employeeInfoModal select').forEach(el => {
                el.addEventListener('change', () => {
                    isFormChanged = true;
                });
            });

            // Кнопка "Отменить"
            document.querySelector('#employeeInfoModal .btn-secondary').addEventListener('click', function (e) {
                if (isFormChanged) {
                    const confirmCancel = confirm("Вы уверены, что хотите отменить изменения?");
                    if (!confirmCancel) {
                        e.preventDefault();
                        return;
                    }
                    cancelConfirmed = true;
                }
                resetFormChangedFlag();
            });

            // Обработчик закрытия модального окна
            modalEl.addEventListener('hide.bs.modal', function (e) {
                if (isFormChanged && !cancelConfirmed) {
                    const confirmClose = confirm("Вы уверены, что хотите отменить изменения?");
                    if (!confirmClose) {
                        e.preventDefault();
                        return;
                    }
                }
                resetFormChangedFlag();
            });
        })();


        // Кнопка "Сохранить"
        document.querySelector('#employeeInfoModal .btn-success').addEventListener('click', function () {
            if (!confirm("Вы уверены, что хотите сохранить изменения?")) {
                return; // Отмена
            }
            const data = {
                CodeEmployee: +document.getElementById('empCode').textContent,
                Surname: document.getElementById('empSurname').value,
                Firstname: document.getElementById('empFirstname').value,
                Midname: document.getElementById('empMidname').value,
                NameCh: document.getElementById('empNameCh').value,
                TabNum: +document.getElementById('empTabNum').value,
                InputDate: document.getElementById('empInputDate').value || null,
                Post: parseInt(document.getElementById('empPost').value) || null,
                PartTime: parseInt(document.getElementById('empPartTime').value) || null,
                Department: parseInt(document.getElementById('empDepartment').value) || null,
                Section: parseInt(document.getElementById('empSection').value) || null,
                CodeQuota: parseInt(document.getElementById('empQuota').value) || null,
                ContractNumber: document.getElementById('empContractNumber').value,
                ContractDate: document.getElementById('empContractDate').value || null,
                Fired: document.getElementById('empFired').checked,
                FiringDate: document.getElementById('empFiringDate').value || null,
                Hazard: parseInt(document.getElementById('empHazard').value) || null,
                HazardDoc: parseInt(document.getElementById('empHazardDoc').value) || null,
                Sex: parseInt(document.getElementById('empSex').value) || null,
                Birthday: document.getElementById('empBirthday').value || null,
                Passport: document.getElementById('empPassport').value,
                Address: document.getElementById('empAddress').value,
                Citizenship: parseInt(document.getElementById('empCitizenship').value) || null,
                Nationality: parseInt(document.getElementById('empNationality').value) || null,
                District: parseInt(document.getElementById('empDistrict').value) || null,
                CodeCategory: parseInt(document.getElementById('empCategory').value) || null
            };

            console.log("Отправляемые данные:", data);

            fetch('/Employee/SaveEmployee', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(res => {
                if (res.ok) return res.json();
                return res.text().then(text => { throw new Error(text) });
            })
            .then(() => {
                const modal = bootstrap.Modal.getInstance(document.getElementById('employeeInfoModal'));
                resetFormChangedFlag();
                modal.hide();
                location.reload(); // обновить таблицу
            })
            .catch(err => {
                console.error("Ошибка запроса:", err);
                    if (err.message.includes("Таб. номер")) {
                        alert(err.message); // Покажет сообщение от сервера с предложением
                    } else {
                        alert("Не удалось сохранить данные: " + err.message);
                    }
                });
        });
    </script>




}
